---

const { 
    name,
    inputs,
    textarea,
    submitMessage = '',
    parentId=null
} = Astro.props;

console.log(parentId);
---

<form
    id={"commentForm"+ ((parentId!=null)?parentId:"")}
    name={name}
    data-netlify="true"
    netlify-honeypot="bot-field"
>

<input type="hidden" name="slug" id="slug" value={Astro.url.toString().split('/posts/')[1].replace("/", "") as string}/>

{
  inputs &&
    inputs.map(
      ({ type = 'text', name: namn = '', label = '', autocomplete = 'on', placeholder = '' }) =>
      namn && (
        <div class="mb-1">
          {label && (
            <label for={namn} class="block text-sm">
              {label}
            </label>
          )}
          <input
            type='text'
            name={namn}
            id={namn}
            autocomplete={autocomplete}
            placeholder={placeholder}
            value=""
            class="py-2 px-2 block w-full text-md rounded-sm border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
          />
          <script define:vars={{ namn }}>
            const urlSearchParams = new URLSearchParams(window.location.search);
            document.getElementById(namn).value=urlSearchParams.get(namn);
          </script>
        </div>
      )
    )
  }

  <!-- honeypot? -->
  <label class="hidden">Don’t fill this out if you’re human: <input name="bot-field" /></label>

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm">
          {textarea.label}
        </label>
        <textarea
          id="comment"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-2 px-2 block w-full text-md rounded-sm border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
        <script define:vars={{ textarea }}>
          const urlSearchParams2 = new URLSearchParams(window.location.search);
          document.getElementById("comment").value=urlSearchParams2.get(textarea.name);
        </script>
      </div>
    )
  }

  <input type="hidden" name="date" id="date" value=""/>
  
  <input type="hidden" name="parentId" id="parentId" value={parentId}/>

  <input type="hidden" name="moderationLink" id="moderationLink" value=""/>

  <div class="mt-6 grid underline text-gray-600 dark:text-gray-400 hover:text-textColor dark:hover:text-textColor">
    <button id="submitButton" type="submit">
      Skicka
    </button>
  </div>
    
</form>


<script define:vars={{ submitMessage, parentId }}>

  const handleSubmit = (event) => {
    event.preventDefault();

    const formId = "#commentForm"+((parentId!=null)?parentId.toString():"");

    // Add the date of submit
    document.querySelector(formId+" #date").value=new Date().toString().replaceAll("+", "%2B");

    // Append moderation data
    var moderationLink = "https://bartotal.digital/approveComment?";
    moderationLink += "slug=" + document.querySelector(formId+" #slug").value;
    moderationLink += "&name=" + document.querySelector(formId+" #name").value;
    moderationLink += "&email=" + document.querySelector(formId+" #email").value;
    moderationLink += "&date=" + document.querySelector(formId+" #date").value;
    moderationLink += "&comment=" + document.querySelector(formId+" #comment").value;
    moderationLink += "&parentId=" + + document.querySelector(formId+" #parentId").value; // add parent id
    moderationLink += "&id=" + stringToHash(moderationLink); //add hashed id

    moderationLink = moderationLink.replaceAll("+", "%20");
    moderationLink = moderationLink.replaceAll(" ", "%20");
    moderationLink = new URL(moderationLink);
    document.querySelector(formId+" #moderationLink").value = moderationLink;

    console.log(moderationLink);

    const myForm = event.target;
    const formData = new FormData(myForm);
    
    // POST
    fetch("/", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams(formData).toString(),
    })
      .then(() => alert(submitMessage),
      document.querySelector(formId+" #comment").value = '',
      document.querySelector(formId+" #moderationLink").value = '')
      .catch((error) => alert(error));
  };

  function stringToHash(string) {
    return string.split('').reduce((hash, char) => {
        return char.charCodeAt(0) + (hash << 6) + (hash << 16) - hash;
    }, 0);
  }

  document
    .querySelector("#commentForm"+((parentId!=null)?parentId.toString():""))
    .addEventListener("submit", handleSubmit);

</script>
