---

const { 
    name,
    inputs,
    textarea,
    submitMessage = '' 
} = Astro.props;


---

<style>
    #dropdownBtn.active::before {
        content: '▾';
    }
    #dropdownBtn::before {
        content: '▸';
        @apply pr-2;
    }
</style>

<div class="mt-24 prose max-w-full text-textColor">
  <hr class="dark:border-gray-800">
  <div class="dropdown">
  <button id="dropdownBtn" class="pb-1 mb-2 font-semibold underline text-gray-600 dark:text-gray-400 hover:text-textColor dark:hover:text-textColor text-lg flex justify-between w-auto">Lämna en kommentar:</button>
  <div class="dropdownContent relative transition-all overflow-hidden h-0 mb-6 mt-4">
<form
    id="commentForm"
    name={name}
    data-netlify="true"
    netlify-honeypot="bot-field"
>
<input type="hidden" name="slug" id="slug" value={Astro.url.toString().split('/posts/')[1].replace("/", "") as string}/>
  {
    inputs &&
      inputs.map(
        ({ type = 'text', name: namn = '', label = '', autocomplete = 'on', placeholder = '' }) =>
          namn && (
            <div class="mb-1">
              {label && (
                <label for={namn} class="block text-sm">
                  {label}
                </label>
              )}
              <input
                type='text'
                name={namn}
                id={namn}
                autocomplete={autocomplete}
                placeholder={placeholder}
                value=""
                class="py-2 px-2 block w-full text-md rounded-sm border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
              />
              <script define:vars={{ namn }}>
                const urlSearchParams = new URLSearchParams(window.location.search);
                document.getElementById(namn).value=urlSearchParams.get(namn);
              </script>
            </div>
          )
      )
  }

  <!-- honeypot? -->
  <label class="hidden">Don’t fill this out if you’re human: <input name="bot-field" /></label>

  {
    textarea && (
      <div>
        <label for="textarea" class="block text-sm">
          {textarea.label}
        </label>
        <textarea
          id="comment"
          name={textarea.name ? textarea.name : 'message'}
          rows={textarea.rows ? textarea.rows : 4}
          placeholder={textarea.placeholder}
          class="py-1 px-2 block w-full text-md rounded-sm border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900"
        />
        <script define:vars={{ textarea }}>
          const urlSearchParams2 = new URLSearchParams(window.location.search);
          document.getElementById("comment").value=urlSearchParams2.get(textarea.name);
        </script>
      </div>
    )
  }

  <input type="hidden" name="moderationLink" id="moderationLink" value=""/>

  <div class="mt-6 grid underline text-gray-600 dark:text-gray-400 hover:text-textColor dark:hover:text-textColor">
    <button id="submitButton" type="submit">
      Skicka
    </button>
  </div>
    
</form>
</div>
</div>
</div>


<script define:vars={{ submitMessage }}>

  const handleSubmit = (event) => {
    event.preventDefault();

    const myForm = event.target;
    const formData = new FormData(myForm);

    // Append moderation data
    var moderationLink = "https://bartotal.digital/approveComment?";
    moderationLink += "slug=" + document.getElementById("slug").value;
    moderationLink += "&name=" + document.getElementById("name").value;
    moderationLink += "&email=" + document.getElementById("email").value;
    moderationLink += "&comment=" + document.getElementById("comment").value;
    document.getElementById("moderationLink").value = moderationLink.replace(" ", "%20");
    
    // POST
    fetch("/", {
      method: "POST",
      headers: { "Content-Type": "application/x-www-form-urlencoded" },
      body: new URLSearchParams(formData).toString(),
    })
      .then(() => alert(submitMessage),
      document.getElementById("comment").value = '')
      .catch((error) => alert(error));
  };

  function dropdown(e) {
    document
        .getElementsByClassName("dropdownContent")[0]
        .classList.toggle("h-auto");
    e.target.classList.toggle("active");
  }

  document
    .querySelector("form")
    .addEventListener("submit", handleSubmit);

  document
    .getElementById("dropdownBtn")
    .addEventListener("click", dropdown);
  
</script>
